name: Deploy

on:
  push:
    branches: [ "master", "main" ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/brattain-crud

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_DB: kubsu
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Build and test
        run: |
          docker build -t test-image .
          docker run --rm --network host \
            -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@localhost:5432/kubsu" \
            test-image python -m pytest -v tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push
        run: |
          echo "Building Docker image from repository..."
          echo "Commit: ${{ github.sha }}"
          echo "Date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          
          docker build --no-cache -t ${{  env.DOCKER_IMAGE }}:latest \
            --label "org.opencontainers.image.source=${{ github.repositoryUrl }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            .
          
          echo "Tagging image with SHA..."
          docker tag ${{  env.DOCKER_IMAGE }}:latest ${{  env.DOCKER_IMAGE }}:${{ github.sha }}
          
          echo "Pushing to Docker Hub..."
          docker push ${{  env.DOCKER_IMAGE }}:latest
          docker push ${{  env.DOCKER_IMAGE }}:${{ github.sha }}
          
          echo "Image pushed successfully!"
          echo "Image tags:"
          echo "  - ${{  env.DOCKER_IMAGE }}:latest"
          echo "  - ${{  env.DOCKER_IMAGE }}:${{ github.sha }}"

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Deploy on server
        run: |
          export DATA_DIR="${{ github.workspace }}/kubsu_postgres_data"
          mkdir -p "$DATA_DIR"
          
          echo "Starting PostgreSQL container..."
          podman stop kubsu-postgres || true
          podman rm --force kubsu-postgres || true
          podman run -d --name kubsu-postgres --replace \
            --network host \
            -e POSTGRES_USER=kubsu \
            -e POSTGRES_PASSWORD=kubsu \
            -e POSTGRES_DB=kubsu \
            -v "$DATA_DIR":/var/lib/postgresql/data \
            postgres:15-alpine
          
          echo "Waiting for PostgreSQL to start..."
          sleep 10
          
          echo "Checking PostgreSQL connection..."
          nc -zv localhost 5432 || echo "❌ PostgreSQL not accessible on localhost:5432"
          
          echo "Cleaning up old app images..."
          podman rmi ${{  env.DOCKER_IMAGE }}:latest || true
          
          echo "Pulling latest app image..."
          podman pull ${{  env.DOCKER_IMAGE }}:latest
          
          echo "Image info:"
          podman inspect ${{  env.DOCKER_IMAGE }}:latest --format '{{.Created}}' || echo "No image info"
          podman inspect ${{  env.DOCKER_IMAGE }}:latest --format '{{index .Config.Labels "org.opencontainers.image.revision"}}' || echo "No revision info"
          
          echo "Stopping old app container..."
          podman stop brattain-crud || true
          podman rm --force brattain-crud || true
          
          echo "Starting new app container..."
          podman run -d --name brattain-crud --network host --replace \
            -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@localhost:5432/kubsu" \
            --label "deployment.commit=${{ github.sha }}" \
            --label "deployment.date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            ${{  env.DOCKER_IMAGE }}:latest
          
          echo "Waiting 8 seconds for app to start..."
          sleep 8
          
          echo "Container status:"
          podman ps -a --filter name=brattain-crud
          podman ps -a --filter name=kubsu-postgres
          
          echo "App container logs:"
          podman logs --tail 20 brattain-crud
          
          echo "Health check:"
          curl -f http://localhost:8020/health || echo "❌ Health check failed"
          
          echo "Root endpoint check:"
          curl -f http://localhost:8020/ || echo "❌ Root endpoint failed"
          
          echo "Deployment completed!"
          echo "Deployed app: ${{  env.DOCKER_IMAGE }}:${{ github.sha }}"
          echo "PostgreSQL data: $DATA_DIR"